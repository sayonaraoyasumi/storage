<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="ja" lang="ja">
    <head>
        <meta charset="utf-8"/>
        
        <link rel="stylesheet" href="style-standard.css" type="text/css"/>

        <link rel="stylesheet" href="style-advance.css" type="text/css"/>

        <link rel="stylesheet" href="book-style.css" type="text/css"/>

        
        <title>たのしいゲームシナリオ入門</title>
    </head>
    <body class="bodymatter hltr" epub:type="bodymatter">
        <h3 id="toc_index_1">第９章　ワークフローに関するエトセトラ</h3>

<p>　最終章は、少々面倒くさいワークフローのお話です。<br/>
　ワークフローと言うのは、だれがどんな作業を行い、どういう形でデータが渡され、どのように製品に仕上がって行くか、という流れのことを言います。<br/>
　この章ではそれにプラスして、ゲーム業界で使われる用語などのお話もしていきたいと思います。</p>

<p><br/></p>

<p>　ワークフローと言っても、ゲームのシナリオは納品したらおしまいじゃないの？</p>

<p><br/></p>

<p>　と、考えられる方がいるかもしれませんが、外注で受けていれば、ほぼそれで正解です。ただし、その場合も、全体の流れのなかのどの部分を受け持っているかを把握しておけば、より仕事の内容を理解できると思います。<br/>
　また、プロジェクト内部に入ってシナリオ作業をする場合でも、ワークフローを考えるのは、マネージャーや企画のお仕事になりますので、ワークフローの把握はあくまでも、自分の作業内容の理解のためだと考えてください。</p>

<p><br/></p>

<p>　昨今のゲームは、３Ｄモデルのキャラが動き、声優さんのヴォイスが再生されるのは一般的になっています。<br/>
　シナリオはこれに必要となるモーション撮影、音声収録、フェイシャルモーション、効果音作成の基本となり、シナリオまわりの作業のもたつきが制作全般に及ぼす影響は計り知れません。</p>

<p><br/></p>

<p>　この章では、前半ではわかりやすくケーススタディを、後半では用語紹介を交えつつ、現在のシナリオ実装のワークフローについて書いていますが、そのまえに、まずはこの30年ほどのゲームシナリオの作業の変化について振り返っておきましょう。</p>

<h4 id="toc_index_2">ゲームシナリオの歴史<span class="upright">①</span>ファミコン時代</h4>

<p>　さて。ビデオゲームの夜明けは昭和50年代初頭のインベーダーゲームあたりに遡るのですが、今回はゲームのシナリオのお話ということで、ファミリーコンピューター、通称ファミコンのあたりから歴史をおさらいしていきたいと思います。</p>

<p><br/></p>

<p>　まずはファミコン時代。<br/>
　ファミコン時代のゲームシナリオは、あくまでもゲームがメインで、文章はそれに付随するもの程度の扱いでした。<br/>
　ファミコンはそもそもメモリも少なく、文字を表示するにはグラフィックメモリの大半を文字に割かなければいけなかったのです。<br/>
　よって、ゲームによってメモリに乗る文字種などが変わり、それに応じた書き方が求められました。</p>

<p><br/></p>

<p>　シナリオライターという明確な役職があるゲームも少なく、プランナーが考えたテキストをプログラマがソース中に直接書き込んでいくケースが多かったと思います。<br/>
　しかも、いまのようなコンパイラ（人間にわかる文字から変換してくれるアプリ）はなく、マシン語（いまのプログラム言語よりもっと機械よりの言語）で開発を行い、プログラマーのなかには16進数の数字の羅列を見てバグを見つけるツワモノまでいる時代でした。<br/>
　正直、この時代はシナリオやテキストのノウハウというものは存在しない、あるいはあったとしても今の世には通用しませんので、あまり深掘りしても意味がありません。</p>

<p><br/></p>

<p>　また、このころはＲＰＧの敵のパラメータも《ヒットポイント》と《攻撃力》のみというケースが少なくなく、データの持ち方もモンスターごとではなく、《ヒットポイントテーブル》、《攻撃力テーブル》というパラメータごとのテーブルが用意されるという形のゲームがありました。網羅的に調べたわけではありませんが、おそらくこちらが主流だったと思います。<br/>
　プログラムがわかる方は想像ができると思いますが、ポインタにモンスターナンバーを加算してデータを取得することができるので、とてもお手軽に実装できたのです。</p>

<h4 id="toc_index_3">ゲームシナリオの歴史<span class="upright">②</span>スーパーファミコン時代</h4>

<p>　ファミコンの次の世代、スーパーファミコンの時代になるとメモリも増え、プランナーのなかでもシナリオを中心に担当するひとが登場します。ただそれでも、現場がマシン語による開発である部分は変わりませんでした。<br/>
　しかしテキスト担当プランナーの作業はやや前進しました。自分で作ったテキスト書類が、プログラマーの手を通さずに実機に反映されるようになったのです。<br/>
　ファミコン時代はコンピューター好きでないと務まらない部分がありましたが、スーパーファミコンになると、テキストだけわかればなんとかなるようになったので、じつはこれは大きな進歩でした。</p>

<p><br/></p>

<p>　モンスターのデータもパラメータテーブルから構造体……つまり、モンスターごとの塊でメモリに置かれるようになりました。（※プロジェクトによります）</p>

<h4 id="toc_index_4">ゲームシナリオの歴史<span class="upright">③</span>次世代機時代</h4>

<p>　さて、スーパーファミコンのあとにプレイステーションやサターンといった次世代機が登場するのですが、ときを同じくしてＲＰＧのシナリオも分岐が多い複雑で大規模なものが増え始めます。<br/>
　スーパーファミコンまでは、シナリオライター兼データマンのようなひとがいれば、そのひとだけでシナリオはこなせたのですが、このころからは分業し、いかに作業がぶつからないようにするかが肝になってきました。</p>

<p><br/></p>

<p>　プロジェクトごとに、シナリオ担当（お話のテキストを書くひと）とスクリプター（それをゲームに組み込むひと）が分かれているケースもあれば、シナリオ担当が組み込みまで行うこともありました。<br/>
　それまではマシン語ベースの独自開発環境でしたが、環境はより一般化し、シナリオライターでも『名前空間（変数の宣言がぶつからないようにする仕組み）』などを意識しないとコンフリクト（処理のぶつかりあい）が生まれるようになりました。</p>

<p><br/></p>

<p>　このころはまだ、マップで起きるイベント（いまでいうカットシーン）は、マップを制御するプログラムのなかに書かれていました。マップで起きることだからマップに書く、というのはごく自然なことですよね。</p>

<p><br/></p>

<p>　おかげで複数のイベントが発生するマップでは、よく事故が起きました。<br/>
　たとえば『ほげほげ』という名前のキャラがイベントＡのセリフも喋るし、イベントＢのセリフも喋る場合、果たしてどんな優先順で表示するのが正しいかなどは、ライターのひとりが記述していくしかなかったのです。このころのスクリプトはツギハギが多く、イベントがどのような条件で発生しているかを追うのは、給食に出てきたスパゲッティをまっすぐに並べ直すような苦行でした。</p>

<h4 id="toc_index_5">ゲームシナリオの歴史<span class="upright">④</span>クエスト制時代</h4>

<p>　この次世代機時代の混乱のなかから、《クエスト制》というゲームの仕組みが生まれます。<br/>
　これは、ユーザーからは『シナリオが細かいクエストの連続で描かれている』ように見えますが、それは飽くまでも外見上の話であり、真価は内部的な実装にあります。<br/>
　クエスト制のゲームを従来の実装で書くこともできますし（その場合クエスト数が増えると破綻します）、従来の形のゲームをクエスト制で実装する（この場合、実装するひとにスキルが必要になります）こともできます。</p>

<p><br/></p>

<p>「クエスト制でやりたい」<br/>
　というと、<br/>
「そんなゲームは受けない」<br/>
　と返されたりもしましたが、そううじゃないんです。中身の話なんです。</p>

<p><br/></p>

<p>　クエスト制は、従来はマップのデータとして書かれていたイベントのスクリプトを、《クエスト》というデータとして独立させたタイプのゲームだと考えてください。</p>

<p><br/></p>

<p>　前述の『ほげほげ』というキャラクターが、イベントＡのセリフを喋るか、イベントＢのセリフを喋るかは、主人公が持っている《クエスト》に書いてあります。『ほげほげ』の側は単に、主人公が持ってるカードを読んでいるに過ぎないのです。<br/>
　<span class="upright">③</span>次世代機時代には、シナリオはスクリプトで実装されていましたが、<span class="upright">④</span>クエスト制時代になるとデータで実装されるようになりました。</p>

<p><br/></p>

<p>　これにより、大量のクエストがコンフリクトなしに実装できるようになりましたが、同時に一般のシナリオ知識ではゲームのシナリオは書けなくなりました（ファミコン時代の実装に比べればそれほど難しい概念ではありませんが）。<br/>
　シナリオライターとスクリプターとの分業・連携が必須となり、また、マップ班（いまはエンブ班と言います）の作業からは独立できるようになりました。</p>

<p><br/></p>

<p>　一般のシナリオライターからすると、『クエスト制では実装できる物語に制限がかかる』との印象があると思いますが、それはクエストの設計次第です。</p>

<h4 id="toc_index_6">ゲームシナリオの歴史<span class="upright">⑤</span>ゲームエンジン時代</h4>

<p>　そしていまは、ゲームエンジンの時代です。<br/>
　Unity や UnrealEngine などのゲームエンジン（ゲームをお手軽に作れるアプリ）のことを聞いたことがある、あるいは触ったことがあるひともいるかと思います。<br/>
　ゲームエンジンはお手軽で、利便性が高く、早い段階で骨組みを作り上げられるのですが、そのためにクエストの設計が後手にまわることが考えられます。</p>

<p><br/></p>

<p>　シナリオの制作に関しては、基本的にはここまでのノウハウが継承されてきているので、これまでと変わりませんが、ゲームエンジンでの制作は、実装作業がレベルデザイナー（レベル＝エリアマップを設計し、実装するひと）中心になり、そのために注意すべき点も生まれました。<br/>
　シナリオの実装に関しては、<span class="upright">④</span>クエスト制時代よりも、<span class="upright">③</span>次世代機時代に近い形になります。つまり、個別のレベルデザイナーがグローバルフラグを参照して、そこで発生するイベントを書く、というスタイルに戻ります。それも意図的に戻っているのではなく、初期のプロトタイピング段階で運命づけられるのです。<br/>
　クエスト制の利点はレベルを超えてクエストが継続されるところにありますが、その点では弱くなることが推測されます。クエスト間のコンフリクトが発生しやすい環境に戻ったと言って良いでしょう。</p>

<p><br/></p>

<p>　また、シナリオを担当する側にクエスト制での制作を経験したひとの絶対数が少ないことも問題として挙げられます。このことは大量のテキストを捌くゲームでは致命的な弱点になります。<br/>
　これは日本のゲーム制作の構造的な問題です。<br/>
　たとえばシナリオライターだったらシナリオライターと名刺に書いてありますが、テキスト系のスクリプターには肩書がありません。また、シナリオを実装するという作業が専門技術であるとの認識もないため、新人のプログラマがアサインされ、作業ノウハウが継承も蓄積もされないままに配置転換になるような例が見受けられます。<br/>
　他方では、ゲームのシナリオを書きたいひとが自己流でスクリプトまで学んだ際に身につけるのは、<span class="upright">③</span>次世代機時代のノウハウで、これらのツールは市場で一般化しています。</p>

<p><br/></p>

<p>　わたくしの感覚からすれば、ＮＰＣのセリフ選択ロジックにif文が出てきた時点で、そのプロジェクトは破綻しているのですが、なかなかこの感覚が伝わりません。しかしこれも、スタッフのノウハウによってはそれでシステムを組んだほうが安全なケースもありますので、こればかりはなんとも言い難いところです。</p>

<p><br/></p>

<p>　と、おおまかに時代を振り返ったところで、次にケーススタディを見ていきます。<br/>
　シナリオ制作・実装の現場で、果たしてどんな事が起きているか。体験をベースにして、各社の機密に抵触しないように書いてみました。</p>

<h4 id="toc_index_7">ケース<span class="upright">①</span>アフレコでテキストが変わる</h4>

<p>　音声収録時にテキストが変更になることがあります。<br/>
　バッチリ検収・校閲されていればこのケースも少ないのでしょうが、音声収録の段階で言葉の誤用、あるいは『モーションの尺に合わない』などがみつかることがあり、その場合は現場でテキストが変更されます。<br/>
　アフレコにシナリオ担当のマネージャーが参加していれば問題はありませんが、そうでない場合、たとえばプロデューサーだけが参加していた際は、非常にデリケートな問題が発生します。<br/>
　プロデューサーは厳密には制作ではなく、製作のひとです。テキストの変更に許可は出せても、その『変更になった』ということを実制作部隊に情報を戻す任務を負っていません。気を利かせて戻してくれるとしても100%信頼できる情報ではありません。<br/>
　最悪の場合、音声ファイルが納品され、それをチェックする段階で音響担当者が気がつく、ということにもなりかねません。<br/>
　変更したテキストをもとに翻訳が変わる場合、翻訳用のテキストも差し替えになりますし、スケジュール調整も必要になります。</p>

<p><br/></p>

<p>　ここにシナリオライターが立ち会う場合も、マネージャーかデータ作成までやってるひとでない場合は似たようなことになります。</p>

<p><br/></p>

<p>　ここでは、現場で変更されたテキストを実際のゲームのテキストにどう反映するかというワークフローが存在しないことが問題となっています。<br/>
　テキストかシナリオのマネージャーがいれば解決する問題ですが、多くのプロジェクトではプランナーが兼任していると思います。しかも、音声収録現場まで知っているプランナーはそう多くはないと思います。座組の時点でこの役割をどうするかは考えておいたほうが良いでしょう。</p>

<h4 id="toc_index_8">ケース<span class="upright">②</span>シナリオ修正と並行して翻訳</h4>

<p>　ゲームのシナリオは様々な理由で変更がかかりがちで、とくに新規タイトルでは途中で企画に修正が入ったり、ゲームの規模が縮小されたりという、不可抗力によって変わることがあります。<br/>
　どんな変更がかかろうが、ふんだんに制作時間があれば良いのですが、そんなケースはたぶんありません。シナリオが変更になるにもかかわらず、カットシーンや翻訳はすでに動いているというケースも考えられます。<br/>
　シナリオの修正が大きい場合、シナリオライターまで戻って変更をかけますが、小さな修正ではエクセル化（データ化）されたテキストをディレクターなりの判断で変更します。</p>

<p><br/></p>

<p>　シナリオライターがシナリオの調整を行う場合、もしこのひとがエクセルのデータまで扱っていれば、そのデータがオリジナルになりますが、word 書類などで納品されていた場合、そこから担当プランナーかプログラマーがデータを作成する流れになります。<br/>
　場合によってはそこに再度リーガルチェックが入ることがあり、この２ステップの作業期間の見積もりは困難を極めます。</p>

<p><br/></p>

<p>　そしてこの変更されたシナリオをもとに訳も変更になるわけですが、昨今のゲームでは少なくとも日英２言語、標準的には欧州含めた６言語程度、多いところでは10言語を超え、これが日本語版→英語版→各国語版と翻訳され、訳されたデータは五月雨式に戻って来るのです。<br/>
　翻訳途中のテキストの差し替えはこの流れに乱れを生じさせ、場合によっては複数バージョンが入り乱れた状態で納品されます。</p>

<p><br/></p>

<p>　ここ大事なので、よく覚えておいてくださいね。<br/>
　ここまでは想像できる事態です。よって、それに備えることはできるはずです。<br/>
　シナリオの制作管理にひとり（できれば個人ではなく、チームを）アサインすれば、プロジェクトの二ヶ月の遅延を回避できるんです。</p>

<h4 id="toc_index_9">ケース<span class="upright">③</span>リーガルチェックの工数が取られていない</h4>

<p>　リーガルチェック、要するに法務部による内容のチェックですが、むかしはこの工数が取られていないことがよくありました。ROMを提出する前日までテキストを変更していたりもしたのですが、いまのゲームの社会的な影響を鑑みると、ありえない工程だと思います。<br/>
　とは言え、いまでもリーガルチェックの予定が組まれていても、修正する時間は取られずに、直後に収録が入っている……というようなこともありうる話です。<br/>
　ゲームのテキストのチェックなどせいぜい数日、修正するとしてもまた数日、という見積もりなのでしょうが、そのために他の仕事を止めて予定をあけておかなければなにもできません。100万文字のテキストは流し読みだけで30時間、その修正はその100万文字の文章のなかで関連性を確認しながら行わなければならないのです。<br/>
　いまあなたが読まれているこの本が、だいたい12万文字です。<br/>
　それを2023年１月７日からの三連休を使ってチェックしていますし、いままでの経験で言えば、リリース後にもかなりの不具合が残っています。<br/>
　ゲームのシナリオのチェックと修正には、この本のテキストの不具合を頭からチェックし、修正する10倍の手間がかかります。</p>

<p><br/></p>

<p>　制作の方では、校閲・リーガルチェックで戻ってきた指摘をゲームのテキストにどう反映していくかというワークフローも考えなければいけません。<br/>
　リーガルチェックはほぼ絶対に変更を余儀なくされますが、言い換えが困難なところはシナリオライターにまで戻さないと修正は難しいと思われます。<br/>
　校閲は絶対的なものではありませんが、どこを反映させるかの判断をくだすひとが必要となります。</p>

<h4 id="toc_index_10">ケース<span class="upright">④</span>リテイクの質が低い</h4>

<p>　そもそも検収の段階でチェックが必要なのですが、シナリオの検収はシナリオを書く人と同等のスキルがないと難しいのではないかと思います。<br/>
　かつ、問題があった場合にはライターを激怒させずにリテイクを返せることが必要になります。<br/>
　リテイクでいちいち激怒するライターのほうがおかしいだろうとも言えますが、理不尽なシナリオと同じくらいに、理不尽なリテイクもあるものです。たとえば、夜中の３時過ぎに急ぎの修正などが入れば、内容のいかんを問わず激怒するでしょう。</p>

<p><br/></p>

<p>　また、『意図が伝わらないリテイク』も少なくありません。<br/>
　たとえば、「ここではモンスターにトドメを刺さないようにしてください」にしても、レーティングが問題なのか、このモンスターを配信などでも使う予定なのか、などの意図を伝える必要があります。<br/>
　もっとわかりにくい例では、「水を飲ませないでください」などがあります。<br/>
　説明なしではなにを求められているのかまったくわかりませんよね。単にコップを手に持っただけにすればいいのか、水でなければ良いのか、あるいは他の場面でも似たシーンがあってそこと被るのか、など。</p>

<p><br/></p>

<p>　もっと困るのが、<br/>
「ヒロインが冷たいです」<br/>
　と、ただの感想を述べられるケースです。<br/>
　そんなこと言われても、<br/>
「はい、そうです」<br/>
　で終わってしまいます。<br/>
　冷たいから修正しろという話なのか、この冷たさがいい雰囲気を出してると言いたいのかわからないので、修正が必要かどうかまでは指示してほしいところです。</p>

<h4 id="toc_index_11">ケース<span class="upright">⑤</span>シナリオのクオリティが低い</h4>

<p>　制作側で困るのが、『シナリオのクオリティが低い』というケースだと思います。<br/>
　大多数の制作がこれを経験されたと思います。<br/>
　シナリオを書く方の身としては、ごめんなさいとしか言いようがないですが……最終的には、「あなたのシナリオのクオリティでは商品になりません」と伝えるしかないのでしょうが、そうやってシナリオライターを使い捨てて作っていくのも非現実的な話です。</p>

<p><br/></p>

<p>　シナリオのクオリティコントロールはとてもやっかいな問題だと思います。<br/>
　名のあるライターに頼んだら自動的に良いものができるかと言えばそうではありません。シナリオに限らずですが、スタッフは単に『良い素材』に過ぎないのです。<br/>
　よりよいものを作り上げるには、共同作業を行っているという認識が必要です。<br/>
　資料を読んだかどうかの確認を取る、疑問点を共有する、内容に関してミーティングを行う。つぎになにを書こうと考えているか、世界観や年表、登場人物設計などを提出してもらってチェックする、などの手順が必要だと思います。</p>

<p><br/></p>

<p>　シナリオライターとしては、己のタイプ速度でギャラをはじいて、最終的には文字のみ納品すれば良いと考えてしまいがちですが、シナリオはゲームという商品になってはじめて価値を持つものです。ですからその価値を最大に高めるよう、ライターも制作も意志をひとつにすべきです。<br/>
　そのためにワークフローがあります。<br/>
　スケジュールを管理するだけでクオリティは上がりません。<br/>
　随時方向性をすり合わせる必要があります。</p>

<h4 id="toc_index_12">ということで、ケーススタディはおしまい</h4>

<p>　と、いくつかのケースを見てきましたが、概ねシナリオマネージャーがいれば（そのひとの能力次第ではありますが）解決する問題です。<br/>
　そのひとが知っておくことは、『どの作業が誰の時間をどのくらい使うか』です。<br/>
　日産３万文字書けるひとも、10文字のアイテム名を３千個は書けないのです。</p>

<p><br/></p>

<p>　ゲームのクレジットで『シナリオチーフ』というのを目にすることがあると思いますが、そのひとは単に良いお話が書けるというだけでなく、毎度このような修羅場を乗り切っているのだと思います。</p>

<p><br/></p>

<p>　シナリオは扱っているのが文字でしかないので、エンジニアからすれば簡単なものに見えるかもしれません。そのため、これを管理する人員の重要性の認識が低いように思います。<br/>
　そもそもこの本を書き始めたのも、その重要性を訴えたいという思いもあってのことです。マネージャーの予算を取り、制作のスタートから同時に翻訳と収録まで含めた計画を引かなければシナリオのクオリティは上がりません。<br/>
　シナリオマネージャーなしでも乗り切れた、という成功体験を持っているひともいるでしょうが、そのプロジェクトが途中で規模の縮小を余儀なくされたこと、制作期間が数ヶ月伸びたことがあれば、その原因がシナリオ制作にある可能性があります。シナリオはそれほど全体に影響を及ぼすのです。</p>

<p><br/></p>

<p>　逆に言えば、最初の段階で明確な方針を打ち立てることがシナリオライターに求められます。シナリオライターはそれが一ヶ月、二ヶ月遅れることがプロジェクトにどんな影響を与えるかを考えなければいけません。</p>

<p><br/></p>

<p>　と、これではただのお説教おじさんになってしまいますね。<br/>
　なってしまうというか、そもそも大好きというか。<br/>
　しかし説教で終わるのも後味が悪いので、最後の章の後半は用語解説などを交えつつ、トーンダウンして幕引きしたいと思います。</p>

<h4 id="toc_index_13">わりとよく出てくる演劇用語</h4>

<p>　ゲームのシナリオの打ち合わせなどでよく演劇用語が出てくることがあります。<br/>
　最初は戸惑うと思いますが、『<ruby><rb>上手</rb><rt>かみて</rt></ruby>』『<ruby><rb>下手</rb><rt>しもて</rt></ruby>』などはしょっちゅう出てきます。<br/>
　他にも『板付』『バミリ』『香盤表』などという言葉を耳にしたことがあります。『ホリゾント』は一度だけ聞きました。『ピンスポ』は聞きますが『トップサス』『サス残し』は聞きません。<br/>
　基本的には覚えなくて大丈夫なものだとは思いますが、ここでは『上手下手』と『香盤表』について書きます。</p>

<p><br/></p>

<p>　まずは上手下手ですが、それぞれ舞台の右手、左手を指します。<br/>
　慣れないうちはよく上手ってどっちだっけ？　となるんですが、右が上手です。<br/>
　スーパーマリオが進んでいく方向が下手から上手、と覚えておくと良いです。グラディウスもＲタイプもそうですし、ゲームの動きは左から右へ、というのが多いようです。ちなみにファイナルファンタジーは逆です。思い出すのはスーパーマリオにしてください。</p>

<p><br/></p>

<p>　話題は逸れますが、右大臣左大臣では左大臣のほうが偉いのですが、雛飾りのなかでは左大臣は右にいるんです。おそらく内裏から見て左だから左大臣、右だから右大臣なんでしょうが混乱しますよね。<br/>
　このあたりに関してはひなまつりの歌を書いたサトウハチローも勘違いしていたらしく、「赤いお顔の右大臣」と歌われているのは、じつは左大臣のことだというから驚きですよ。この歌のせいで子どもたちは右にいる偉い左大臣のことを下っ端の右大臣だって思い込んじゃってるんですから。</p>

<p><br/></p>

<p>　古来日本では『<ruby><rb>左上右下</rb><rt>さじょううげ</rt></ruby>』と言われ、左が尊いとされています。<br/>
　つまりエラいひとが並んでいたら左側、自分から見たら向かって右側がエラいのだ、と覚えておけば良いことになりいますが、いや、待てよ？　お内裏様では男雛が向って左にいるが、どういうことなんだ？　と、逆に混乱しますよね。</p>

<p><br/></p>

<p>　じつはこれ、お内裏様も本来は左側、向かって右に男雛が座るのが本来の姿だと言われています。どうやらこれが明治時代に入れ替わったらしく、京都だけはいまもお内裏様の並び方が逆であるという話も聞きます。</p>

<p><br/></p>

<p>　これ、皿の上の焼き魚を思い浮かべても、宇宙戦艦ヤマトを思い浮かべても、かならず頭は左（下手）を向いてるんですね。そんななかで。さすがですね、マリオ。<br/>
　なのでとにかくもう、上手下手と聞いたら、マリオを走らせてください。<br/>
　そう、マリオの動きこそが下手から上手へ。日本の伝統なのです。</p>

<p><br/></p>

<p>　次に『香盤表』なのですが、撮影進行のスケジュール表のようなものです。<br/>
　どのカットにだれが、どんな小道具が登場するかを記した表なのですが、いままでに３通りの用法を確認しました。</p>

<p><br/></p>

<p>　ひとつはシナリオで、どのシーンにだれが登場するか、主にフローを把握するためのもの。シーンごとの香盤表です。</p>

<p><br/></p>

<p>　もうひとつは、カットシーンの制作用に、カットごとに必要なアセットを記入したもの。こちらはカットごとの香盤表です。</p>

<p><br/></p>

<p>　みっつめは、モーション撮影用にアクターさんの割当を表にしたもので、こちらは撮影手順に合わせた表になってます。</p>

<p><br/></p>

<p>　単に『香盤表』と言っても、内容は微妙に違っていますので注意が必要なようです。</p>

<h4 id="toc_index_14">わりとよく出てくる映像用語</h4>

<p>　とはいえ、上手下手以外で演劇用語が使われるケースは少ないと思います。<br/>
　いままでに、『板付』『陰板』『サス残し』を使ったのは、舞台風の演出をしていたころの話（とは言え数年前ですが）で、いまはそんな時代でもなくなりました。<br/>
　シナリオライターが照明まで指定するのかよ、と言われるならば、わたくしの場合は面白がってやっておりました。<br/>
　演劇用語を使う機会はこれからは更に機会は減ると思いますが、映像用語はこれからも使われると思います。</p>

<p><br/></p>

<p>　メジャーなところでは、ズーム、パン、トラック、ワイプ、フェードイン、フェードアウト、カットインなどはとてもよく使います。<br/>
　このなかで『カットイン』は映像用語とゲーム用語で意味が違うので注意が必要です。<br/>
　映像でのカットインはフェードインに対応する言葉で、じんわりと画面が切り替わらず、ぱっと切り変わることを意味し、ゲームでは引きの画面に顔のアップなどがレイヤーで差し込まれることを言います。ゲームだとほぼ後者で使われると思って間違いないです。</p>

<p><br/></p>

<p>　また困ったことに、最近では『ワイプ』をテレビ業界用語のほうで使う人がぽつぽつ見られます。バラエティ番組などで、画面の端っこに芸人の顔を丸い枠で抜くのをコーナーワイプだとかワイプだとか言うのですが、ゲーム業界ではこれをカットインと呼ぶひとが多く、混乱します。<br/>
　とは言え『ワイプ』をもともとの意味――カット間の切り替えのエフェクト（トランジション効果）の意味――で使うひとは皆無と言って良い有様です。</p>

<p><br/></p>

<p>　カメラ挙動に関しては、アニメ経由で入ってきているものが多いように思います。<br/>
　つまりどういうことかと言うと、ズームアップ（カメラの焦点距離で対象を大きく表示する）とトラックアップ（カメラを近づけて対象を大きく表示する）を区別しないひとがそれなりの数存在します。アニメだとズームアップとトラックアップは同じ絵になりますが、映像では別の効果を持ちます。</p>

<p><br/></p>

<p>　ちなみに、80年代にズームアップとトラックバックを同時に行って、対象の見かけの大きさを変えずに背景の圧縮効果だけを変えるというカメラワークがありました。<br/>
　最初にこれを見たのがどの映画だったか失念しましたが、複数の映画やドラマで目にした記憶があります。じつはこのカメラワーク、つい数年前にリリースされえた超有名ＲＰＧでも使われている箇所がありました。ドラゴンクエストＸのVer.4.3のラスト近くなのですが、もし遊ばれる際は気をつけて見てみてください。</p>

<h4 id="toc_index_15">定着した開発用語</h4>

<p>　逆にゲームの開発用語から定着したらしきものがいくつかあります。<br/>
　パッと思いつくのは『外観』ですが、とあるゲーム（前節で挙げたタイトルですが）で城のマップを開くと『外観へ→』という記載があります。しかし通常は、城の外を『外観』とは言わないと思うのです。<br/>
　これは開発のなかで、城の中と外を作る際に、外のことを『外観』と呼んでいたことから定着したのだと思います。</p>

<p><br/></p>

<p>　同様に、『マップ』も通常とは違った使われ方をしています。<br/>
　マップというのは、地図を参照するときに開いて見るためのものですが、ゲーム中ではプレイヤーがいるエリアそのものをマップと呼んでいることがあります。<br/>
　たとえば『イベントが開催されますので○○のマップに移動してください』などとアナウンスされたりしますが、ゲームをやっていると違和を覚えなくなるので不思議なものです。</p>

<p><br/></p>

<p>　それが開発用語だと指摘するひともいないままに世に出て一般化しているのだと思います。本来なら開発用語をそのまま作品に出すのは良いことではないのですが、もっと広い目で見れば、言葉とはもともとそういうものなのだろうとも感じます。</p>

<h4 id="toc_index_16">IDの重要性、なんにでも名前をつける</h4>

<p>　ゲームのワークフローはプランナーなりマネージャーなりにおまかせするとして、シナリオライターにできることはなにか。<br/>
　それは、『名前をつけること』です。<br/>
　すべてのキャラ、すべての建物、すべての地域に名前をつけることです。<br/>
　とは言え、キャラに関しては名前をつけるのは主役級だけで、有象無象にはＡＢＣでいいです。<br/>
　――100年前に世界を混沌に陥れた戦争<br/>
　――数年前に帝都を襲った謎の伝染病<br/>
　――幽霊が目撃される町外れの辻<br/>
　――○○の血族の手の甲に出る痣<br/>
　基本的にはすべて名前をつけます。<br/>
　ただし、有象無象のキャラはＡＢＣでいいです。</p>

<p><br/></p>

<p>　ストーリーの各チャプター、エピソードにも名前を付けます。<br/>
　些細な出合い頭の会話の場面にも、できれば名前、小タイトルがあると良いです。<br/>
　でないと開発中に<br/>
「主人公がショップに行ったときに流れるあれ」<br/>
　などと呼ばれます。<br/>
　もちろん、どう呼ばれようが構うことでもないんですが、<br/>
「ああ、あの子犬が出てくるやつ？」<br/>
「いや、それじゃなくて、二番目の町の東にある店の……」<br/>
　と、次第に混乱するようになるので、あったほうが良いです。</p>

<p><br/></p>

<p>　フラグにも名前をつけます。<br/>
　これは以前だったらスクリプター（いまならプログラマ）の役割でしたが、通し番号だけで名前なんかついていいませんでした。<br/>
　これにも逐一『田中くんとエッチな話をした』などと名前があって、ゲーム中でもそれで参照できるようにしてほしいです。（これはエンジニアの仕事ですね）</p>

<h4 id="toc_index_17">データ構造</h4>

<p>　……という流れから唐突にデータの話に飛びますが、わたくしたまに、ゲームの設計などもしておりまして、自分で設計しながらもやや納得していない点がいくつかあるので述べます。<br/>
　データなんか知らん！　というひとはウサギが何回跳ねるか数えてください。ぴょん。</p>

<p><br/></p>

<p>　その<span class="upright">①</span><br/>
　ウインドウ単位でテキストにIDつけるのやめてほしいぴょん。</p>

<p><br/></p>

<p>　さきほど書いた『なんにでも名前をつける』に反しますが、テキストの一個のまとまりというのは、ウインドウに表示できる文字数とは別のはずなんですよ。<br/>
　ここからはプログラマーさんへの提案です。わたくし以外のシナリオライターはおそらく反対します。が、そこは押し切りたいぴょん。<br/>
　テキストはモデルであって、ウインドウはビューです。<br/>
　ビューの都合でモデルを設計しますか？<br/>
　なぜテキストにはそのような設計を求めるのでしょう。<br/>
　モデル単位でIDをつけて、それをウインドウでどう分割して表示するかはビュー側で処理してほしいぴょん。</p>

<p><br/></p>

<p>　その<span class="upright">②</span><br/>
　テキストをグループ化するデータがない。</p>

<p><br/></p>

<p>　テキストがウインドウごとに分割されているので、同じカットシーン内のこのテキストとあのテキストが同じセリフの一部だということを示すデータがない。<br/>
　どのテキストを使うかを示すデータは、スクリプト中で直書きされて並んでいることが多い。ぴょん。<br/>
　IDとシリアルで指定するケースはあるが、『このセリフはどこまで』というデータは文章を読んで人間が判断するしかない。果たして、人間が読んで判断するしかないデータがデータと言えるでしょうか。<br/>
　これをもっと明確化して、SQLでいう SELECT 文でテキストを得てイテレータで出力できるようにしてほしい。</p>

<p><br/></p>

<p>　その<span class="upright">③</span><br/>
　文章の構造をツリーではなく、ネスト構造にしてほしいぴょん。</p>

<p><br/></p>

<p>　シナリオライターのおそらく99%が反対しますが、分岐するというのをやめて、飽くまでもネストして戻ってくる構造にしてほしい。<br/>
　ユーザーの選択で物語が分岐するなどというのは夢物語であり、ほとんどのカットシーンでは分岐などしない。</p>

<p><br/></p>

<p>　ここまでの３つの案を総合すると、わたくしの理想とするテキスト構造は、<br/>
『SELECT 文で該当するテキストを持ってきて、ビュー側で分割して表示する、再帰的なテキスト表示機構』<br/>
　になるぴょん。<br/>
　つまり、１つのカットシーンは、SELECT文１回で全てが完了します。<br/>
　それどころか、シナリオ全体が１回の呼び出しで再帰的に呼び出されます。<br/>
　ぜったいに分岐などしてはいけない。<br/>
　その先には地獄が待ってるだけだから。</p>

<p><br/></p>

<p>　ということで、ウサギは７回跳ねました。</p>

<p><br/></p>

<p>　と、用語集のはずがまた、ワークフローの話に戻ってしまいましたね。<br/>
　用語は見ての通り、スタッフが通ってきた文化によっても変わるので、ここで断言するのも難しいと気が付きました。<br/>
　軌道修正などせず、このまま行っちゃおうと思います。</p>

<h4 id="toc_index_18">リソース管理・作業履歴</h4>

<p>　プロジェクトによっては、シナリオライターが直接ソースデータをいじるケースがありますが、わたくしはオススメしません。<br/>
　なぜならば、ソースデータはだれもが変更できてしまい、シナリオライターの納品物がなんだったかが見えなくなるからです。のっぴきならない場合にはやってはいるのですが、その場合の契約は『テキストの納品』ではないと思うのです。</p>

<p><br/></p>

<p>　外注でシナリオを請ける際は、検収を受けたものが納品物となります。<br/>
　この納品物に関して、たとえば『差別的表現があった』、『ナチスを礼賛していた』、というのは（いくら検収しているとはいえ）シナリオライターの責任となります。これが、ソースファイルを複数で直接操作していたのでは、だれにどんな責任があったのかわからなくなります。<br/>
　なので、ソースファイル（実際にコンバートしてゲームになるファイル）の形式で提出するにしても、サーバのものを触るのではなく、提出したモノが形として互いの手元に残るのが理想です。（理想です、なんて言い方をしているといううことは、そうはなっていないのが現実だということなのですが）</p>

<h4 id="toc_index_19">困る修正指示</h4>

<p>　よく、「修正指示は具体的に出してもらわないと困る」という話を耳にしますが、これは仕事の分担次第だと思います。<br/>
　シナリオの場合、たとえばユーザーの「恐怖感を煽る」場合に、不気味な音を出すか、電気を瞬かせるか、あるいは伝承を思い出すかなど、いろんな選択肢があるわけで、これを決め打ちで「壁にダイイングメッセージを残しておいてください」と言われても逆に困ることがあります。</p>

<p><br/></p>

<p>　まず困るのは、それが必須事項なのか、案のひとつなのか、です。<br/>
　その指示を出したひとが演出なりのポジションで前後の関係まですべて把握していれば良いのですが、そうでないケースも見られます。無責任に言いっ放しで、次の会議では言ったことすら忘れているというひともいるくらいで（このケースはプロデューサーなど偉いひとに多いのですが）、この変更に責任を持たなければいけないのは飽くまでもシナリオライターになります。<br/>
　だったら、ここは「もっと恐怖感を煽りましょう」とふんわりと提案されて、「それならこんな方法はどうでしょう」とシナリオの方から提案するのが納得のいくものが書ける気がします。</p>

<p><br/></p>

<p>　だから本当のことを言うと、シナリオが「画面をシェイクします」と書くのは間違いで、「ドラゴンの攻撃で地響きが起きる」など、起きたことを書くべきなんです。<br/>
　それを画面のシェイクで表現するかエフェクトで表現するかは演出家が決めることで、シナリオで「シェイクします」と言ったら、そのゲームはそこ止まりですよ。<br/>
　まあ、ある程度やってると「はいはいどうせシェイクなんでしょうシェイクシェイク」ってな調子で軽く書いてしまうんですが、そういう馴れ合いにならずに毎度毎度どう実装すべきかと問い直していけたら最高ですね。<br/>
　これもまあ、ただの理想です。<br/>
　理想って、崇高なものなのに、ただの理想だと言っちゃうこの寂しさ。</p>

<p><br/></p>

<p>　ただこれも本当になんども言っているのですが、ゲームのカットシーン作成の経験がある演出家がそうそういないので、大原則はともかくとして、うまく回るまではノウハウのあるほうが主導的に進めるのが正解でしょう。</p>

<h4 id="toc_index_20">シナリオ会議！</h4>

<p>　そしていよいよやってきました。<br/>
　ゲームのシナリオライターのお仕事のなかでもたいへんなお仕事……それがシナリオ会議です。<br/>
　会議は大変です。<br/>
　ボロボロになります。</p>

<p><br/></p>

<p>　初期の段階ではアイデアを出すだけの、ブレストと呼ばれるような会議がありますが、こちらは楽です。会議の進行役と議事録係がたいへんなだけで、シナリオライターは言いっぱなしです。</p>

<p><br/></p>

<p>　たいへんなのは、ある程度お話が固まってからのシナリオ会議です。<br/>
　偉いひと５人～１０人を相手に、「これはこういうお話です」と提案したうえに、質疑応答に答えないといけません。<br/>
　ひとと交わるのが苦手だからこの職を選んだはずなのに、なぜこんなことに、と思いますね。</p>

<p><br/></p>

<p>　わたくしの場合は、知り合いから受ける仕事がメインで、しかも年齢も高いので、それほどのプレッシャーをかけられることもないんですが、それでも疲弊しますからね。若くて繊細なひとはたいへんだと思います。<br/>
　シナリオ担当の窓口や会議のファシリテーター（取りまとめ役）の人がうまく捌いてくれれば良いのですけど、そうでないと糾弾会のようになってしまいます。<br/>
　こういうのはお互いに良いものにしようと思ってぶつかりあうわけだから、遠慮してもしょうがないし、かと言って嫌な思いをしてまで尽くしたくないし、その調整は必要だと思います。</p>

<h4 id="toc_index_21">リテイク対応</h4>

<p>　シナリオには必ずリテイクがあります。<br/>
　そのまま通ることはほぼないので、まずはリテイクで凹まないようにしてください。</p>

<p><br/></p>

<p>　リテイクを分類してみると<br/>
　<span class="upright">①</span>システムやストーリー的なリテイク<br/>
　<span class="upright">②</span>レイティング対応<br/>
　<span class="upright">③</span>校閲・校正対応<br/>
　<span class="upright">④</span>リーガルチェック対応<br/>
　という４種類があると思います。</p>

<p><br/></p>

<p>　<span class="upright">①</span>は『ストーリーが面白くない』や『ゲームのシステム的と矛盾する』などを含み、内容はさまざまで、一般的なリテイクです。</p>

<p><br/></p>

<p>　<span class="upright">②</span>は CERO というレーティング機構があるのですが、そこでの評価をもらうための修正です。たとえばレーティングＡを取るにはエロやグロ表現を抑えなければいけませんが、これに対応することでテレビ広告を打てる時間帯が広がるなどのメリットがあります。</p>

<p><br/></p>

<p>　<span class="upright">③</span>は<span class="upright">②</span>と似ているのですが、レーティングとは関係なく、校閲の場合は『歴史的事実と異なる』や『言葉の用法を誤っている』や『一人称が統一されていない』、校正の場合は『句点が抜けている』や『送り仮名が間違っている』などが上がってきます。<br/>
　校正・校閲・リーガルチェックは同時の場合もあれば、別々のこともあります。<br/>
　初期にシナリオだけ納品して契約が終了している場合は、これらの修正は向こうでやってくれると思います。</p>

<p><br/></p>

<p>　<span class="upright">④</span>は法務部によるチェックで、基本的には言葉レベルでのチェックになると思います。他社の商標を使っていたり、差別関連のＮＧワードがあったりといった部分のチェックになります。『文脈的にこう読み取れる』というのもありますが、いまのゲームのシナリオは膨大すぎるので、文脈まで読んでもらえることはまれかと思います。</p>

<h4 id="toc_index_22">ユーザー対応</h4>

<p>　と、アトランダムに書いてきましたが、こうやって書いたものにもユーザーからの厳しい目は注がれます。<br/>
　最近はＳＮＳにアカウントを持っているライターさんも多いことでしょうし、ユーザーから直接の声もいただけると思いますが、基本的に発売後の商品に関してシナリオライターが個別に語ることはありません。<br/>
　シナリオライターが責任を持たなければいけないのは、納品先に対してだけで、それを含む商品に関してあれこれ口を出す資格はないのです。<br/>
　基本的にユーザー対応はクライアントが行います。</p>

<p><br/></p>

<p>　批判は気になると思いますが、ネットではあの村上春樹や、あのスティーブン・キングが批判されてるんですよ？<br/>
　シナリオライターにできるのは、<br/>
「やっと村上春樹に並んだ」<br/>
　とか思って、ココロ静かに過ごすことだけです。</p>

<h4 id="toc_index_23">ギャラの決め方</h4>

<p>　えー、そしてこれが最後のトピックになりますが、ギャラの決め方、です。<br/>
　テキスト関連のお仕事をざっと見てみると、ネット用のテキストで凄まじく安いところ（１文字0.1円未満）はありますが、その他では原稿用紙１枚で４千円だとか５千円だとか言われています。<br/>
　１文字10円から15円と考えればだいたいは作業感とあう感じになります。<br/>
　外部のシナリオライターとして契約すると、概ね文字数ベースだと思いますし、それも仕方がないのかなとは思いますが、文字数ベースでの契約はオススメしません。<br/>
　なぜならば、<span class="upright">①</span>依頼するほうが文字数をしっかり把握していないのと、<span class="upright">②</span>文字数で契約しちゃうとどうしても文字数を稼がないといけない気がするからです。</p>

<p><br/></p>

<p>　ゲームのセリフなんか、短ければ短いほど良いのですよ。<br/>
　でも正直、短くするのが難しい。<br/>
　これに対して、長くするのはいくらでも長くできる。</p>

<p><br/></p>

<p>　ゲーム１本のテキストは概ね100万文字と書きましたが、１文字15円で契約すると1500万円になります。じゃあ、そんな金額が出ているかというと……これは内緒です。</p>

<p><br/></p>

<p>　映画１本の脚本が200万から600万と言われていますから、それと比較するとずいぶん高いように思えます。<br/>
　しかしじつは、100万文字というのは、アニメでいうとテレビ放送２年ぶんに相当します。アニメはライター数人とシリーズ構成と文芸担当がいます。その８クールぶんのギャラをぜんぶ合算したくらいが、ゲームのシナリオのギャラとして妥当なラインだと思います。<br/>
　果たしてそれがいくらなのか、と考えるとなんとなく絞れて行く感じでしょうか。途方もない金額ですよ。</p>

<p><br/></p>

<p>　いまはゲームのシナリオを専門で請け負う会社さんもあるようですし、お仕事としてはどうしてもそちらに流れがちです。<br/>
　個人でテキストを書けるひとがいたとしても、どのくらい信用して任せてよいかわかりませんし、プロジェクトにシナリオを取りまとめるマネージャーがいなければ、発注の仕方さえわからないということにもなりかねません。<br/>
　ちなみに、ゲームを制作してるひとのなかでも、シナリオの発注ノウハウを持ってるひとはわずかだと思います。多くの場合、自社でテキストを揃えるか、シナリオ制作会社に頼んで上がってきたものをプランナーがせっせと組み込んでいるように思います。</p>

<p><br/></p>

<p>　なので、ゲームのシナリオライターになりたいと思ったら、シナリオ会社に入ってしまうのが一番、というかそれしかほぼ選択肢はありません。<br/>
　その場合、とうぜんのようにギャラは自分では決められませんし、新入社員なら新入社員のお給金になります。そのなかで地道にコネを切り拓いていくしかないのだと思います。<br/>
　いまのゲーム業界が、未来ある若者に門戸を開いているかどうかは、当事者でないのでわかりません。</p>

<h4 id="toc_index_24">コラボは辛いです……</h4>

<p>　そして最後に、今度こそ本当に最後の最後に言っておきたいこと。<br/>
　それは……コラボは辛い、ということ。<br/>
　辛いというか、とても辛い。<br/>
　もともとコラボを想定している契約ならともかく、月極で「この量だったらこの値段で行けるやろう」と思っていたら有名漫画とのコラボの回がありまして、本当にこれはもう大変でした。<br/>
　ちらりと読んだことがあるとはいえ、どのキャラがどのキャラをどう呼んでいたかなど覚えてないじゃないですか。どの程度の難読漢字があるか、カタカナ語と漢字とをどのように使い分けているかなど、改めて全巻取り寄せて、付箋をペタペタ貼りながら読むだけで１日潰れますからね。<br/>
　実際に書き上げてからも通常とは違うワークフローで、リテイクの回数も多いし、期日もずれるし。</p>

<p><br/></p>

<p>　有名作に関わるわけですから、それで名が売れるじゃないかと思われるかもしれませんが、こういうのは縁の下の力持ちですよね。名を売るのも本意ではないし、売ってはいけないんだと思います。ただ、著名作品の端っこに齧りつけた満足感はありました。</p>

<h4 id="toc_index_25">これからゲームシナリオライターを目指すひとに</h4>

<p>　と、ほぼ魂の欲するがままに好き勝手に書いてきましたが、最後は『これからゲームシナリオライターを目指すひとに伝えたいこと』で〆たいと思います。</p>

<p><br/></p>

<p>　まずその、ゲームのシナリオライターは狭き門だと思います。<br/>
　しかも、出版社の文藝賞のようなものがあるわけでもなく、理不尽な選抜しかありません。</p>

<p><br/></p>

<p>　シナリオ専門の会社もあり、そこに所属するのが手っ取り早いと思いますが、本当にそこが『妥当な選抜』をしているかどうかは疑ってかかるべきです。</p>

<p><br/></p>

<p>　大手のソフトハウスに入り、そこで製作やプロデューサーをしながら、ひとの手を使って自分の書きたいものを実現する、という方法もあります。<br/>
　大規模なゲームはもはやひとりで書けるテキストではありませんから、本当に自分の物語を書きたいならば、それもありです。<br/>
　が、これは更に狭き門になると思います。</p>

<p><br/></p>

<p>　小さなソフトハウスでプランナーやグラフィック、アニメーターからシナリオライターへの転身という道もありますが、こちらは運次第で、所属したソフトハウスがどんな仕事を請けるかにもよってきます。</p>

<p><br/></p>

<p>　あるいはいまなら自主制作という手もあります。<br/>
　ひとりが無理なら友人と組んで、Unity なり UnrealEngine なりで作ってリリースする、という方向も、じつは可能性としてはいちばん大きいかもしれません。</p>

<p><br/></p>

<p>　そして、いずれにしてもひとつ確実に言えるのは、すべて運だということです。<br/>
　場合によってはジャンプに投稿して漫画家でデビューして、そこからコネでゲーム業界へ流れる、であっても上記に挙げたものより可能性が低いとは言い切れません。<br/>
　あるいはウェブの投稿小説ポータルからの転身にしてもしかり、また、身の回りには広告業界から転職したひとも少なくありません。</p>

<p><br/></p>

<p>　逆に、他の分野で素晴らしい才能を発揮しているひとが、じつはゲーム業界を受けて落ちたんだという話もよく耳にします。<br/>
　これらは才能で厳密に選抜されたものではなく、運です。<br/>
　わたくしがゲームのシナリオを書いているのも、運です。</p>

<p><br/></p>

<p>　逆に言えば、妥当な選抜がなされていれば、いまのようなゲームの発展はなかったかもしれません。ゲームを本業にするつもりはなかった漫画家、同じく役者、同じく広告デザイナーらが集まって、いまのゲームができました。</p>

<p><br/></p>

<p>　なので正直なところ、ゲームのシナリオライターというのは人生のオプションくらいに考えるのが良いかもしれません。</p>

<p><br/></p>

<p>　わたくしがゲーム業界に入ったころ、アフレコ台本の知識が必要になるとは思っていませんでした。絵コンテを描くことになろうとも思いませんでした。そしていまのゲーム業界にいるひとのだれも、次のゲームを制作するノウハウを持っていません。それらは、ゲームの外からもたらされるものです。</p>

<p><br/></p>

<p>　ゲーム業界が多くの才能を正しく選抜できていないことを、残念に思っています。<br/>
　何度も繰り返しますが、あなたがもしゲームのシナリオライターを目指され、それが叶わなかったとしても、運でしかありません。<br/>
　だからそうなった場合でも、どうかこの間抜けな業界を見捨てず、どこかで支えていただけたら、あるいは良きライバルとしてどこかで相まみえることができたらと思っています。</p>

<p><br/></p>

<p>　もちろん、この本を読んだひとのなかからゲームのシナリオライターになるひとが出てくれれば、それがわたくしの最大の喜びとなります。<br/>
　そしていずれにしても、あなたの才能の開花と発展、そしていつかどこかで出会えることを楽しみにしています。</p>

<p><br/></p>

<p>　と、いうところで、最後にお楽しみコーナーをひとつ残して、この本は終了となります。<br/>
　少し早いのですが、今回はご精読いただきありがとうございました。<br/>
　これからもお互いの失敗や苦難をシェアし、精進していきましょう。</p>

<p><br/></p>

<div class="centerimage"><img src="nextpageis.jpg" alt="次のページの案内"/></div>

<h4 class="information" id="toc_index_26">息抜き水着グラビア<span class="upright">⑨</span></h4>

<div class="centerimage"><img src="book9.jpg" alt="スイートなおじさん"/></div>

<p><br/></p>

<div class="centerimage"><img src="mietakana.jpg" alt="見えたかな？"/></div>

<p><br/></p>
    </body>
</html>
